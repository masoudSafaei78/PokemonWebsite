[{"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\App.js":"1","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\index.js":"2","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Header.js":"3","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\reportWebVitals.js":"4","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\HeaderStyle.js":"5","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\LeftSideBarStyle.js":"6","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\LeftSideBar.js":"7","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Theme\\index.js":"8","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\PokemonCards.js":"9","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Pages\\Home.js":"10","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Layout.js":"11","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\LayoutStyles.js":"12","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Test.js":"13","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\test2.js":"14"},{"size":729,"mtime":1606998501839,"results":"15","hashOfConfig":"16"},{"size":658,"mtime":1606399765137,"results":"17","hashOfConfig":"16"},{"size":6071,"mtime":1606560423404,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"16"},{"size":2026,"mtime":1606559349746,"results":"20","hashOfConfig":"16"},{"size":889,"mtime":1606639803286,"results":"21","hashOfConfig":"16"},{"size":2056,"mtime":1606551715470,"results":"22","hashOfConfig":"16"},{"size":472,"mtime":1607002322695,"results":"23","hashOfConfig":"16"},{"size":3528,"mtime":1607012658874,"results":"24","hashOfConfig":"16"},{"size":4783,"mtime":1607003418062,"results":"25","hashOfConfig":"16"},{"size":10069,"mtime":1607013165671,"results":"26","hashOfConfig":"16"},{"size":798,"mtime":1606554200944,"results":"27","hashOfConfig":"16"},{"size":9096,"mtime":1606936493172,"results":"28","hashOfConfig":"16"},{"size":1171,"mtime":1607013414784,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dokd5n",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\App.js",["70","71","72","73","74","75"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\index.js",[],["76","77"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Header.js",["78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport useStyles from '../Styles/HeaderStyle';\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [darkmode,setDarkMode]=useState(false);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    // handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      style={{paddingTop:\"0px\"}}\r\n      anchorEl={anchorEl}\r\n      // anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      // transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem style={{backgroundColor:\"#000\",paddingTop:\"0px\"}} className={classes.LoginIcon,classes.title} onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem style={{backgroundColor:\"#000\"}} className={classes.title} onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          \r\n            <Brightness2Icon />\r\n         \r\n        </IconButton>\r\n        <p>Change Theme</p>\r\n        \r\n      </MenuItem>\r\n     \r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    // <div className={classes.grow}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Pokemon\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton \r\n            className={classes.Icons}\r\n            \r\n            color=\"inherit\">\r\n             \r\n               <GitHubIcon/>\r\n              \r\n            </IconButton>\r\n            <IconButton \r\n             className={classes.Icons}\r\n\r\n            onClick={()=>setDarkMode(!darkmode)}\r\n             \r\n             color=\"inherit\">\r\n             \r\n               {darkmode?<Brightness2Icon/>:<WbSunnyIcon/>}\r\n              \r\n            </IconButton>\r\n            <IconButton\r\n             className={classes.Icons}\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          {/* <div className={classes.sectionMobile}>\r\n            <IconButton\r\n             className={classes.Icons}\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              // onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon  className={classes.Icons} />\r\n            </IconButton>\r\n          </div> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      // {renderMobileMenu}\r\n      // {renderMenu}\r\n    // </div>\r\n  );\r\n}\r\n",["89","90"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\reportWebVitals.js",[],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\HeaderStyle.js",[],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\LeftSideBarStyle.js",["91","92"],"import  {makeStyles,fade}  from '@material-ui/core/styles';\r\nconst drawerWidth = 202;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    //  margin:0,\r\n      display: 'flex',\r\n      width:\"100%\",\r\n      height:'100%'\r\n     \r\n    },\r\n    // appBar: {\r\n    //   width: `calc(100% - ${drawerWidth}px)`,\r\n    //   marginLeft: drawerWidth,\r\n    // },\r\n    drawer: {\r\n        \r\n     \r\n      width: \"100%\",\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        background:theme.palette.primary.main,\r\n      // width: drawerWidth,\r\n      color:theme.palette.secondary.main,\r\n      marginTop:\"10vh\"\r\n    },\r\n    // necessary for content to be below app bar\r\n    // toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n      \r\n    },\r\n  }));\r\n    \r\n  export default useStyles;",["93","94"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\LeftSideBar.js",["95","96","97","98"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport useStyles from '../Styles/LeftSideBarStyle'\r\nimport Header from './Header';\r\n\r\n\r\n\r\nexport default function LeftSideBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div >\r\n      <CssBaseline />\r\n      <Header  >\r\n        {/* <Toolbar>\r\n    \r\n        </Toolbar> */}\r\n      </Header>\r\n     \r\n      <Drawer\r\n        // className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        {/* <div className={classes.toolbar} /> */}\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['About Pokemon', 'contact us'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main >\r\n        <div  />\r\n  \r\n   \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n",["99","100"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Theme\\index.js",[],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\PokemonCards.js",["101","102","103","104","105"],"import React from 'react'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport '../Styles/PokemonCardStyle.scss';\r\nimport { ButtonBase } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert style={{fontSize:'40px',height:\"40px\"}} elevation={8} variant=\"filled\" {...props} />;\r\n}\r\nfunction PokemonCard({ pid, pname, ptype1, ptype2, ptotal, pAttack, pDefense, pSpeed, pLegendary }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  // const legen\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div class=\"artboard\" onClick={handleClick}>\r\n      {open? <Snackbar bodyStyle={{ backgroundColor: 'teal', color: 'coral' }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert  onClose={handleClose} severity=\"success\">\r\n          <text style={{fontSize:\"15px\"}}> Added to favorites</text>\r\n         \r\n        </Alert>\r\n      </Snackbar>:null}\r\n      \r\n      {/* <Snackbar\r\n      style={{}}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        style={{ fontSize: \"5rem\" }}\r\n        message=\"Added to favorits\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"large\" onClick={handleClose} style={{ fontSize: \"13px\" }}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"large\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </React.Fragment> */}\r\n        {/* }\r\n      /> */}\r\n      <div class=\"card\">\r\n\r\n        <div class=\"card__side card__side--back\">\r\n          <div class=\"card__cover\">\r\n            <h4 class=\"card__heading\">\r\n              <span class=\"card__heading-span\">Skills</span>\r\n            </h4>\r\n          </div>\r\n          <div class=\"card__details\">\r\n            <ul>\r\n\r\n              <li>Types:\r\n              {ptype2!=null?<p>{ptype1},{ptype2}</p>:<p>{ptype1}</p>}\r\n              \r\n              {/* <p>{ptype1},{ptype2}</p>  */}\r\n              </li>\r\n              <li>Total:{ptotal}</li>\r\n              <li>Attack:{pAttack}</li>\r\n              <li>Defense:{pDefense}</li>\r\n              <li>Speed:{pSpeed}</li>\r\n         <p/>\r\n              {pLegendary?<li style={{marginTop:\"20px\",backgroundColor:\"Gold\"}}>Legendary</li>:null}\r\n              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card__side card__side--front\">\r\n          <div class=\"card__theme\">\r\n            <div class=\"card__theme-box\">\r\n              <p class=\"card__subject\">Bowerlas</p>\r\n              <p class=\"card__subject\">{pid}</p>\r\n              <p class=\"card__title\">{pname}</p>\r\n              {/* <p><FavoriteIcon fontSize=\"large\"/></p> */}\r\n            </div>\r\n            {/* <div style={{float:\"left\"}}>\r\n            <ButtonBase>\r\n          <FavoriteIcon fontSize=\"large\"/>\r\n\r\n            </ButtonBase>\r\n           </div> */}\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonCard\r\n","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Pages\\Home.js",["106"],"import React from 'react'\r\nimport PokemonCard from '../PokemonCards'\r\nimport '../../App.css';\r\nimport Test2 from '../test2';\r\nimport { Grid } from '@material-ui/core';\r\nfunction Home() {\r\n    const data=[{\"id\":1,\"Name\":\"Bulbasaur\",\"Type1\":\"Grass\",\"Type2\":\"Poison\",\"Total\":318,\"HP\":45,\"Attack\":49,\"Defense\":49,\"Sp# Atk\":65,\"Sp# Def\":65,\"Speed\":45,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":2,\"Name\":\"Ivysaur\",\"Type1\":\"Grass\",\"Type2\":\"Poison\",\"Total\":405,\"HP\":60,\"Attack\":62,\"Defense\":63,\"Sp# Atk\":80,\"Sp# Def\":80,\"Speed\":60,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":3,\"Name\":\"Venusaur\",\"Type1\":\"Grass\",\"Type2\":\"Poison\",\"Total\":525,\"HP\":80,\"Attack\":82,\"Defense\":83,\"Sp# Atk\":100,\"Sp# Def\":100,\"Speed\":80,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":4,\"Name\":\"VenusaurMega Venusaur\",\"Type1\":\"Grass\",\"Type2\":\"Poison\",\"Total\":625,\"HP\":80,\"Attack\":100,\"Defense\":123,\"Sp# Atk\":122,\"Sp# Def\":120,\"Speed\":80,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":5,\"Name\":\"Charmander\",\"Type1\":\"Fire\",\"Total\":309,\"HP\":39,\"Attack\":52,\"Defense\":43,\"Sp# Atk\":60,\"Sp# Def\":50,\"Speed\":65,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":6,\"Name\":\"Charmeleon\",\"Type1\":\"Fire\",\"Total\":405,\"HP\":58,\"Attack\":64,\"Defense\":58,\"Sp# Atk\":80,\"Sp# Def\":65,\"Speed\":80,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":7,\"Name\":\"Charizard\",\"Type1\":\"Fire\",\"Type2\":\"Flying\",\"Total\":534,\"HP\":78,\"Attack\":84,\"Defense\":78,\"Sp# Atk\":109,\"Sp# Def\":85,\"Speed\":100,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":8,\"Name\":\"CharizardMega Charizard X\",\"Type1\":\"Fire\",\"Type2\":\"Dragon\",\"Total\":634,\"HP\":78,\"Attack\":130,\"Defense\":111,\"Sp# Atk\":130,\"Sp# Def\":85,\"Speed\":100,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":9,\"Name\":\"CharizardMega Charizard Y\",\"Type1\":\"Fire\",\"Type2\":\"Flying\",\"Total\":634,\"HP\":78,\"Attack\":104,\"Defense\":78,\"Sp# Atk\":159,\"Sp# Def\":115,\"Speed\":100,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":10,\"Name\":\"Squirtle\",\"Type1\":\"Water\",\"Total\":314,\"HP\":44,\"Attack\":48,\"Defense\":65,\"Sp# Atk\":50,\"Sp# Def\":64,\"Speed\":43,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":11,\"Name\":\"Wartortle\",\"Type1\":\"Water\",\"Total\":405,\"HP\":59,\"Attack\":63,\"Defense\":80,\"Sp# Atk\":65,\"Sp# Def\":80,\"Speed\":58,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":12,\"Name\":\"Blastoise\",\"Type1\":\"Water\",\"Total\":530,\"HP\":79,\"Attack\":83,\"Defense\":100,\"Sp# Atk\":85,\"Sp# Def\":105,\"Speed\":78,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":13,\"Name\":\"BlastoiseMega Blastoise\",\"Type1\":\"Water\",\"Total\":630,\"HP\":79,\"Attack\":103,\"Defense\":120,\"Sp# Atk\":135,\"Sp# Def\":115,\"Speed\":78,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":14,\"Name\":\"Caterpie\",\"Type1\":\"Bug\",\"Total\":195,\"HP\":45,\"Attack\":30,\"Defense\":35,\"Sp# Atk\":20,\"Sp# Def\":20,\"Speed\":45,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":15,\"Name\":\"Metapod\",\"Type1\":\"Bug\",\"Total\":205,\"HP\":50,\"Attack\":20,\"Defense\":55,\"Sp# Atk\":25,\"Sp# Def\":25,\"Speed\":30,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":16,\"Name\":\"Butterfree\",\"Type1\":\"Bug\",\"Type2\":\"Flying\",\"Total\":395,\"HP\":60,\"Attack\":45,\"Defense\":50,\"Sp# Atk\":90,\"Sp# Def\":80,\"Speed\":70,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":17,\"Name\":\"Weedle\",\"Type1\":\"Bug\",\"Type2\":\"Poison\",\"Total\":195,\"HP\":40,\"Attack\":35,\"Defense\":30,\"Sp# Atk\":20,\"Sp# Def\":20,\"Speed\":50,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":18,\"Name\":\"Kakuna\",\"Type1\":\"Bug\",\"Type2\":\"Poison\",\"Total\":205,\"HP\":45,\"Attack\":25,\"Defense\":50,\"Sp# Atk\":25,\"Sp# Def\":25,\"Speed\":35,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":19,\"Name\":\"Beedrill\",\"Type1\":\"Bug\",\"Type2\":\"Poison\",\"Total\":395,\"HP\":65,\"Attack\":90,\"Defense\":40,\"Sp# Atk\":45,\"Sp# Def\":80,\"Speed\":75,\"Generation\":1,\"Legendary\":false},\r\n    {\"id\":20,\"Name\":\"BeedrillMega Beedrill\",\"Type1\":\"Bug\",\"Type2\":\"Poison\",\"Total\":495,\"HP\":65,\"Attack\":150,\"Defense\":40,\"Sp# Atk\":15,\"Sp# Def\":80,\"Speed\":145,\"Generation\":1,\"Legendary\":false}]\r\n    return (\r\n         <Grid style={{background:\"#220326\",width:\"100%\",marginLeft:\"20px\",marginTop:\"70px\"}}container xs={12} md={12} sm={12} justify=\"center\" alignItems=\"center\" >\r\n\r\n            {/* <Grid item xs={10} sm={12} md={12} justify=\"center\" >\r\n                \r\n            </Grid> */}\r\n            {data.map((item)=>(\r\n                // <PokemonCards pid={item.id} pname={item.Name}/>\r\n                <PokemonCard pid={item.id} pname={item.Name} ptype1={item.Type1} ptype2={item.Type2}\r\n                ptotal={item.Total} pAttack={item.Attack} pDefense={item.Defense} pSpeed={item.Speed} pLegendary={item.Legendary} />\r\n                ))}\r\n             \r\n        </Grid>\r\n        // <Grid container direction=\"column\" md={4} >\r\n        //     <Grid item>\r\n        //     {data.map((item)=>(\r\n        //         // <PokemonCards pid={item.id} pname={item.Name}/>\r\n        //         <Test2/>\r\n        //         ))}\r\n        // </Grid>\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Layout.js",["107","108","109","110"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Styles\\LayoutStyles.js",["111","112"],"import { green } from '@material-ui/core/colors';\r\nimport  {makeStyles,fade}  from '@material-ui/core/styles';\r\nconst useStyles = makeStyles( (theme) => ({\r\n    root:{\r\n        // backgroundColor:\"red\",\r\n        display:\"flex\",\r\n       flexGrow:1,\r\n        // height:\"100vh\",\r\n        width:\"100%\"\r\n    },\r\n    leftside:{\r\n        flex:1,\r\n            \r\n        backgroundColor:theme.palette.primary.second,\r\n        // height:\"90vh\"\r\n        // marginTop:\"70px\"\r\n\r\n    },\r\n    mainPart:{\r\n        flex:1,\r\n        // height:\"100vh\",\r\n        overflowY:\"hidden\",\r\n        backgroundColor:theme.palette.primary.second\r\n\r\n    },\r\n    headerPart:{\r\n       \r\n        width:\"100%\",\r\n        // height:\"20%\"\r\n    },\r\n    secondPart:{\r\n        height:\"80%\"\r\n    }\r\n   \r\n  }));\r\n  export default useStyles;",["113","114"],"G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\Test.js",["115"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport Pokemonlogo from '../img/Pokemonlogo.png';\r\nimport { fade, Paper } from '@material-ui/core';\r\nimport Home from './Pages/Home';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    // height:\"10vh\",\r\n    color:theme.palette.primary.main,\r\n    \r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width:`calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      height:\"70px\"\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    display:'flex',\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    \r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(16),\r\n      width: '220px',\r\n      height:'30px'\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    fontSize:'15px'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    // width: drawerWidth,\r\n    backgroundColor:theme.palette.primary.main,\r\n    \r\n    \r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    fontSize:\"20px\"\r\n  },\r\n//   toolbarlogo:{\r\n//     height:\"70px\",\r\n//     width:\"100%\",\r\n//     backgroundColor:theme.palette.primary.main\r\n//   },\r\n  logo:{\r\n    backgroundImage:`url(${Pokemonlogo})`,\r\n    // backgroundPosition:\"center\",\r\n    // marginBottom:\"110px\",\r\n    backgroundOrigin:\"content-box\",\r\n    backgroundSize:\"contain\",\r\n    backgroundColor:theme.palette.primary.main,\r\n    backgroundRepeat:\"no-repeat\",\r\n    height:\"70px\",\r\n    width:240,\r\n    boxShadow:\"none\",\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    color:theme.palette.secondary.main,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      \r\n    },\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [darkmode,setDarkMode]=useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} >\r\n          {/* <div className={classes.toolbarlogo}> */}\r\n          <Paper className={classes.logo}/>\r\n\r\n          {/* </div> */}\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {['Home', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon fontSize=\"large\" style={{color:theme.palette.secondary.main}}/> : <MailIcon fontSize=\"large\" style={{color:theme.palette.secondary.main}}/>}</ListItemIcon>\r\n            <ListItemText primary={text} style={{color:theme.palette.secondary.main}}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon fontSize=\"large\" style={{color:theme.palette.secondary.main}}/> : <MailIcon fontSize=\"large\" style={{color:theme.palette.secondary.main}}/>}</ListItemIcon >\r\n            <ListItemText primary={text}  style={{color:theme.palette.secondary.main}}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography className={classes.title} variant=\"h6\" >\r\n            Pokemon\r\n          </Typography> */}\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon fontSize=\"large\" />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n\r\n          <IconButton \r\n            className={classes.Icons}\r\n            \r\n            color=\"inherit\">\r\n             \r\n               <GitHubIcon fontSize=\"large\"/>\r\n              \r\n            </IconButton>\r\n            <IconButton \r\n             className={classes.Icons}\r\n\r\n            onClick={()=>setDarkMode(!darkmode)}\r\n             \r\n             color=\"inherit\">\r\n             \r\n               {darkmode?<Brightness2Icon fontSize=\"large\"/>:<WbSunnyIcon fontSize=\"large\"/>}\r\n              \r\n            </IconButton>\r\n            <IconButton\r\n             className={classes.Icons}\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              // aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              // onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle fontSize=\"large\"/>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Toolbar/>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n     \r\n\r\n      \r\n       <Home />\r\n        {/* <div className={classes.toolbar} /> */}\r\n        \r\n\r\n      \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","G:\\ReactJs Projects\\Pokemon\\pokemon\\src\\Components\\test2.js",[],{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"121","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"122","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":12},{"ruleId":"116","severity":1,"message":"123","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":12,"column":8,"nodeType":"118","messageId":"119","endLine":12,"endColumn":13},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"116","severity":1,"message":"129","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"130","line":2,"column":16,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"131","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":13},{"ruleId":"116","severity":1,"message":"132","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":16},{"ruleId":"116","severity":1,"message":"133","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":16},{"ruleId":"116","severity":1,"message":"134","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":25},{"ruleId":"116","severity":1,"message":"135","line":19,"column":8,"nodeType":"118","messageId":"119","endLine":19,"endColumn":16},{"ruleId":"116","severity":1,"message":"136","line":44,"column":9,"nodeType":"118","messageId":"119","endLine":44,"endColumn":29},{"ruleId":"116","severity":1,"message":"137","line":49,"column":9,"nodeType":"118","messageId":"119","endLine":49,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":60,"column":95,"nodeType":"140","messageId":"141","endLine":60,"endColumn":96},{"ruleId":"116","severity":1,"message":"142","line":66,"column":9,"nodeType":"118","messageId":"119","endLine":66,"endColumn":25},{"ruleId":"125","replacedBy":"143"},{"ruleId":"127","replacedBy":"144"},{"ruleId":"116","severity":1,"message":"129","line":1,"column":21,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"145","line":2,"column":7,"nodeType":"118","messageId":"119","endLine":2,"endColumn":18},{"ruleId":"125","replacedBy":"146"},{"ruleId":"127","replacedBy":"147"},{"ruleId":"116","severity":1,"message":"130","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"148","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"149","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"116","severity":1,"message":"150","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":18},{"ruleId":"125","replacedBy":"151"},{"ruleId":"127","replacedBy":"152"},{"ruleId":"116","severity":1,"message":"153","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"154","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":20},{"ruleId":"116","severity":1,"message":"155","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":18},{"ruleId":"116","severity":1,"message":"156","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":17},{"ruleId":"116","severity":1,"message":"157","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":14},{"ruleId":"116","severity":1,"message":"124","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":13},{"ruleId":"116","severity":1,"message":"158","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":17},{"ruleId":"116","severity":1,"message":"150","line":23,"column":8,"nodeType":"118","messageId":"119","endLine":23,"endColumn":18},{"ruleId":"116","severity":1,"message":"159","line":32,"column":8,"nodeType":"118","messageId":"119","endLine":32,"endColumn":19},{"ruleId":"116","severity":1,"message":"160","line":36,"column":8,"nodeType":"118","messageId":"119","endLine":36,"endColumn":15},{"ruleId":"116","severity":1,"message":"161","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":15},{"ruleId":"116","severity":1,"message":"129","line":2,"column":21,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"125","replacedBy":"162"},{"ruleId":"127","replacedBy":"163"},{"ruleId":"116","severity":1,"message":"150","line":17,"column":8,"nodeType":"118","messageId":"119","endLine":17,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'LeftSideBar' is defined but never used.","'Home' is defined but never used.","'PokemonCards' is defined but never used.","'Test2' is defined but never used.","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'fade' is defined but never used.","'makeStyles' is defined but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'renderMenu' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'renderMobileMenu' is assigned a value but never used.",["164"],["165"],"'drawerWidth' is assigned a value but never used.",["164"],["165"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.",["164"],["165"],"'FavoriteIcon' is defined but never used.","'ButtonBase' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'Button' is defined but never used.","'InboxIcon' is defined but never used.","'Pokemonlogo' is defined but never used.","'Pokemon' is defined but never used.","'green' is defined but never used.",["164"],["165"],"no-global-assign","no-unsafe-negation"]